server:
  port: 9090
  
spring:
  redis:
    host: redis
    port: 6379
    application:
    name: API-GATEWAY
  config:
   import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  cloud:
    gateway:
      routes:
      -  id: ORDER-SERVICE
         uri: http://order-service-svc
         predicates:
           - Path=/order/**
         filters:
           - name: CircuitBreaker
             args:
               name: ORDER-SERVICE
               fallbackuri: forward:/orderServiceFallBack
           - name: RequestRateLimiter
             args:
               redis-rate-limiter.replenishRate: 1
               redis-rate-limiter.burstCapacity: 1
              
              
          
      -  id: PAYMENT-SERVICE
         uri: lb://PAYMENT-SERVICE
         predicates:
         - Path=/payment/**
         filters:
          - name: CircuitBreaker
            args:
              name: PAYMENT-SERVICE
              fallbackuri: forward:/paymentServiceFallBack
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 1
              redis-rate-limiter.burstCapacity: 1
              
          
      -  id: PRODUCT-SERVICE
         uri: lb://PRODUCT-SERVICE
         predicates:
         - Path=/product/**
         filters:
          - name: CircuitBreaker
            args:
              name: PRODUCT-SERVICE
              fallbackuri: forward:/productServiceFallBack
          - name: RequestRateLimiter
            args:
              redis-rate-limiter.replenishRate: 1
              redis-rate-limiter.burstCapacity: 1
              
                     
okta:
  oauth2:
    issuer: https://dev-34551137.okta.com/oauth2/default  
    audience: api://default
    client-id: 0oa6n855x31tRjO7S5d7
    client-secret: wFntQdlR7Jjdhxv5tkz7FmC87qYJjtCv1K010_-I
    scopes: openid, profile, email, offline_access
                     
                     
                     
                     