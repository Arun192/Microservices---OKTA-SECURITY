package org.arun.orderservice.external.decoder;

import java.io.IOException;

import org.arun.orderservice.exception.CustomException;
import org.arun.orderservice.external.response.ErrorResponse;

import com.fasterxml.jackson.databind.ObjectMapper;

import feign.Response;
import feign.codec.ErrorDecoder;
import lombok.extern.log4j.Log4j2;

@Log4j2
public class CustomErrorDecoder implements ErrorDecoder{

	@Override
	public Exception decode(String s, Response response) {
		
		ObjectMapper objectMapper = new ObjectMapper();
		log.info(":: {} ",response.request().url());
		log.info(":: {} ",response.request().headers());

		try {
			ErrorResponse errorResponse = objectMapper.readValue(response.body().asInputStream(), ErrorResponse.class);
			
			return new CustomException(errorResponse.getErrorMessage,errorResponse.getErrorCode ,response.status() )
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return null;
	}

}
